// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: proto/workspaces/v1/workspaces.proto

package workspacesv1connect

import (
	context "context"
	errors "errors"
	connect_go "github.com/bufbuild/connect-go"
	v1 "github.com/unkeyed/unkey/apps/agent/gen/proto/workspaces/v1"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// WorkspaceServiceName is the fully-qualified name of the WorkspaceService service.
	WorkspaceServiceName = "proto.workspaces.v1.WorkspaceService"
)

// WorkspaceServiceClient is a client for the proto.workspaces.v1.WorkspaceService service.
type WorkspaceServiceClient interface {
	CreateWorkspace(context.Context, *connect_go.Request[v1.CreateWorkspaceRequest]) (*connect_go.Response[v1.CreateWorkspaceResponse], error)
	DeleteWorkspace(context.Context, *connect_go.Request[v1.DeleteWorkspaceRequest]) (*connect_go.Response[v1.DeleteWorkspaceResponse], error)
	FindWorkspace(context.Context, *connect_go.Request[v1.FindWorkspaceRequest]) (*connect_go.Response[v1.FindWorkspaceResponse], error)
	RenameWorkspace(context.Context, *connect_go.Request[v1.RenameWorkspaceRequest]) (*connect_go.Response[v1.RenameWorkspaceResponse], error)
	ChangePlan(context.Context, *connect_go.Request[v1.ChangePlanRequest]) (*connect_go.Response[v1.ChangePlanResponse], error)
}

// NewWorkspaceServiceClient constructs a client for the proto.workspaces.v1.WorkspaceService
// service. By default, it uses the Connect protocol with the binary Protobuf Codec, asks for
// gzipped responses, and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply
// the connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewWorkspaceServiceClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) WorkspaceServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &workspaceServiceClient{
		createWorkspace: connect_go.NewClient[v1.CreateWorkspaceRequest, v1.CreateWorkspaceResponse](
			httpClient,
			baseURL+"/proto.workspaces.v1.WorkspaceService/CreateWorkspace",
			opts...,
		),
		deleteWorkspace: connect_go.NewClient[v1.DeleteWorkspaceRequest, v1.DeleteWorkspaceResponse](
			httpClient,
			baseURL+"/proto.workspaces.v1.WorkspaceService/DeleteWorkspace",
			opts...,
		),
		findWorkspace: connect_go.NewClient[v1.FindWorkspaceRequest, v1.FindWorkspaceResponse](
			httpClient,
			baseURL+"/proto.workspaces.v1.WorkspaceService/FindWorkspace",
			opts...,
		),
		renameWorkspace: connect_go.NewClient[v1.RenameWorkspaceRequest, v1.RenameWorkspaceResponse](
			httpClient,
			baseURL+"/proto.workspaces.v1.WorkspaceService/RenameWorkspace",
			opts...,
		),
		changePlan: connect_go.NewClient[v1.ChangePlanRequest, v1.ChangePlanResponse](
			httpClient,
			baseURL+"/proto.workspaces.v1.WorkspaceService/ChangePlan",
			opts...,
		),
	}
}

// workspaceServiceClient implements WorkspaceServiceClient.
type workspaceServiceClient struct {
	createWorkspace *connect_go.Client[v1.CreateWorkspaceRequest, v1.CreateWorkspaceResponse]
	deleteWorkspace *connect_go.Client[v1.DeleteWorkspaceRequest, v1.DeleteWorkspaceResponse]
	findWorkspace   *connect_go.Client[v1.FindWorkspaceRequest, v1.FindWorkspaceResponse]
	renameWorkspace *connect_go.Client[v1.RenameWorkspaceRequest, v1.RenameWorkspaceResponse]
	changePlan      *connect_go.Client[v1.ChangePlanRequest, v1.ChangePlanResponse]
}

// CreateWorkspace calls proto.workspaces.v1.WorkspaceService.CreateWorkspace.
func (c *workspaceServiceClient) CreateWorkspace(ctx context.Context, req *connect_go.Request[v1.CreateWorkspaceRequest]) (*connect_go.Response[v1.CreateWorkspaceResponse], error) {
	return c.createWorkspace.CallUnary(ctx, req)
}

// DeleteWorkspace calls proto.workspaces.v1.WorkspaceService.DeleteWorkspace.
func (c *workspaceServiceClient) DeleteWorkspace(ctx context.Context, req *connect_go.Request[v1.DeleteWorkspaceRequest]) (*connect_go.Response[v1.DeleteWorkspaceResponse], error) {
	return c.deleteWorkspace.CallUnary(ctx, req)
}

// FindWorkspace calls proto.workspaces.v1.WorkspaceService.FindWorkspace.
func (c *workspaceServiceClient) FindWorkspace(ctx context.Context, req *connect_go.Request[v1.FindWorkspaceRequest]) (*connect_go.Response[v1.FindWorkspaceResponse], error) {
	return c.findWorkspace.CallUnary(ctx, req)
}

// RenameWorkspace calls proto.workspaces.v1.WorkspaceService.RenameWorkspace.
func (c *workspaceServiceClient) RenameWorkspace(ctx context.Context, req *connect_go.Request[v1.RenameWorkspaceRequest]) (*connect_go.Response[v1.RenameWorkspaceResponse], error) {
	return c.renameWorkspace.CallUnary(ctx, req)
}

// ChangePlan calls proto.workspaces.v1.WorkspaceService.ChangePlan.
func (c *workspaceServiceClient) ChangePlan(ctx context.Context, req *connect_go.Request[v1.ChangePlanRequest]) (*connect_go.Response[v1.ChangePlanResponse], error) {
	return c.changePlan.CallUnary(ctx, req)
}

// WorkspaceServiceHandler is an implementation of the proto.workspaces.v1.WorkspaceService service.
type WorkspaceServiceHandler interface {
	CreateWorkspace(context.Context, *connect_go.Request[v1.CreateWorkspaceRequest]) (*connect_go.Response[v1.CreateWorkspaceResponse], error)
	DeleteWorkspace(context.Context, *connect_go.Request[v1.DeleteWorkspaceRequest]) (*connect_go.Response[v1.DeleteWorkspaceResponse], error)
	FindWorkspace(context.Context, *connect_go.Request[v1.FindWorkspaceRequest]) (*connect_go.Response[v1.FindWorkspaceResponse], error)
	RenameWorkspace(context.Context, *connect_go.Request[v1.RenameWorkspaceRequest]) (*connect_go.Response[v1.RenameWorkspaceResponse], error)
	ChangePlan(context.Context, *connect_go.Request[v1.ChangePlanRequest]) (*connect_go.Response[v1.ChangePlanResponse], error)
}

// NewWorkspaceServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewWorkspaceServiceHandler(svc WorkspaceServiceHandler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	mux := http.NewServeMux()
	mux.Handle("/proto.workspaces.v1.WorkspaceService/CreateWorkspace", connect_go.NewUnaryHandler(
		"/proto.workspaces.v1.WorkspaceService/CreateWorkspace",
		svc.CreateWorkspace,
		opts...,
	))
	mux.Handle("/proto.workspaces.v1.WorkspaceService/DeleteWorkspace", connect_go.NewUnaryHandler(
		"/proto.workspaces.v1.WorkspaceService/DeleteWorkspace",
		svc.DeleteWorkspace,
		opts...,
	))
	mux.Handle("/proto.workspaces.v1.WorkspaceService/FindWorkspace", connect_go.NewUnaryHandler(
		"/proto.workspaces.v1.WorkspaceService/FindWorkspace",
		svc.FindWorkspace,
		opts...,
	))
	mux.Handle("/proto.workspaces.v1.WorkspaceService/RenameWorkspace", connect_go.NewUnaryHandler(
		"/proto.workspaces.v1.WorkspaceService/RenameWorkspace",
		svc.RenameWorkspace,
		opts...,
	))
	mux.Handle("/proto.workspaces.v1.WorkspaceService/ChangePlan", connect_go.NewUnaryHandler(
		"/proto.workspaces.v1.WorkspaceService/ChangePlan",
		svc.ChangePlan,
		opts...,
	))
	return "/proto.workspaces.v1.WorkspaceService/", mux
}

// UnimplementedWorkspaceServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedWorkspaceServiceHandler struct{}

func (UnimplementedWorkspaceServiceHandler) CreateWorkspace(context.Context, *connect_go.Request[v1.CreateWorkspaceRequest]) (*connect_go.Response[v1.CreateWorkspaceResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("proto.workspaces.v1.WorkspaceService.CreateWorkspace is not implemented"))
}

func (UnimplementedWorkspaceServiceHandler) DeleteWorkspace(context.Context, *connect_go.Request[v1.DeleteWorkspaceRequest]) (*connect_go.Response[v1.DeleteWorkspaceResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("proto.workspaces.v1.WorkspaceService.DeleteWorkspace is not implemented"))
}

func (UnimplementedWorkspaceServiceHandler) FindWorkspace(context.Context, *connect_go.Request[v1.FindWorkspaceRequest]) (*connect_go.Response[v1.FindWorkspaceResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("proto.workspaces.v1.WorkspaceService.FindWorkspace is not implemented"))
}

func (UnimplementedWorkspaceServiceHandler) RenameWorkspace(context.Context, *connect_go.Request[v1.RenameWorkspaceRequest]) (*connect_go.Response[v1.RenameWorkspaceResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("proto.workspaces.v1.WorkspaceService.RenameWorkspace is not implemented"))
}

func (UnimplementedWorkspaceServiceHandler) ChangePlan(context.Context, *connect_go.Request[v1.ChangePlanRequest]) (*connect_go.Response[v1.ChangePlanResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("proto.workspaces.v1.WorkspaceService.ChangePlan is not implemented"))
}
