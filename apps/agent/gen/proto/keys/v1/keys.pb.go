// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: proto/keys/v1/keys.proto

package keysv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RatelimitType int32

const (
	RatelimitType_RATELIMIT_TYPE_UNSPECIFIED RatelimitType = 0
	RatelimitType_RATELIMIT_TYPE_FAST        RatelimitType = 1
	RatelimitType_RATELIMIT_TYPE_CONSISTENT  RatelimitType = 2
)

// Enum value maps for RatelimitType.
var (
	RatelimitType_name = map[int32]string{
		0: "RATELIMIT_TYPE_UNSPECIFIED",
		1: "RATELIMIT_TYPE_FAST",
		2: "RATELIMIT_TYPE_CONSISTENT",
	}
	RatelimitType_value = map[string]int32{
		"RATELIMIT_TYPE_UNSPECIFIED": 0,
		"RATELIMIT_TYPE_FAST":        1,
		"RATELIMIT_TYPE_CONSISTENT":  2,
	}
)

func (x RatelimitType) Enum() *RatelimitType {
	p := new(RatelimitType)
	*p = x
	return p
}

func (x RatelimitType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RatelimitType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_keys_v1_keys_proto_enumTypes[0].Descriptor()
}

func (RatelimitType) Type() protoreflect.EnumType {
	return &file_proto_keys_v1_keys_proto_enumTypes[0]
}

func (x RatelimitType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RatelimitType.Descriptor instead.
func (RatelimitType) EnumDescriptor() ([]byte, []int) {
	return file_proto_keys_v1_keys_proto_rawDescGZIP(), []int{0}
}

type VerifyKeyResponseCode int32

const (
	VerifyKeyResponseCode_VERIFY_KEY_RESPONSE_CODE_UNSPECIFIED VerifyKeyResponseCode = 0
	VerifyKeyResponseCode_VERIFY_KEY_RESPONSE_CODE_NOT_FOUND   VerifyKeyResponseCode = 1
)

// Enum value maps for VerifyKeyResponseCode.
var (
	VerifyKeyResponseCode_name = map[int32]string{
		0: "VERIFY_KEY_RESPONSE_CODE_UNSPECIFIED",
		1: "VERIFY_KEY_RESPONSE_CODE_NOT_FOUND",
	}
	VerifyKeyResponseCode_value = map[string]int32{
		"VERIFY_KEY_RESPONSE_CODE_UNSPECIFIED": 0,
		"VERIFY_KEY_RESPONSE_CODE_NOT_FOUND":   1,
	}
)

func (x VerifyKeyResponseCode) Enum() *VerifyKeyResponseCode {
	p := new(VerifyKeyResponseCode)
	*p = x
	return p
}

func (x VerifyKeyResponseCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VerifyKeyResponseCode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_keys_v1_keys_proto_enumTypes[1].Descriptor()
}

func (VerifyKeyResponseCode) Type() protoreflect.EnumType {
	return &file_proto_keys_v1_keys_proto_enumTypes[1]
}

func (x VerifyKeyResponseCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VerifyKeyResponseCode.Descriptor instead.
func (VerifyKeyResponseCode) EnumDescriptor() ([]byte, []int) {
	return file_proto_keys_v1_keys_proto_rawDescGZIP(), []int{1}
}

type Ratelimit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type           RatelimitType `protobuf:"varint,1,opt,name=type,proto3,enum=proto.keys.v1.RatelimitType" json:"type,omitempty"`
	Limit          int32         `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	RefillRate     int32         `protobuf:"varint,3,opt,name=refill_rate,json=refillRate,proto3" json:"refill_rate,omitempty"`
	RefillInterval int32         `protobuf:"varint,4,opt,name=refill_interval,json=refillInterval,proto3" json:"refill_interval,omitempty"`
}

func (x *Ratelimit) Reset() {
	*x = Ratelimit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_keys_v1_keys_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ratelimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ratelimit) ProtoMessage() {}

func (x *Ratelimit) ProtoReflect() protoreflect.Message {
	mi := &file_proto_keys_v1_keys_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ratelimit.ProtoReflect.Descriptor instead.
func (*Ratelimit) Descriptor() ([]byte, []int) {
	return file_proto_keys_v1_keys_proto_rawDescGZIP(), []int{0}
}

func (x *Ratelimit) GetType() RatelimitType {
	if x != nil {
		return x.Type
	}
	return RatelimitType_RATELIMIT_TYPE_UNSPECIFIED
}

func (x *Ratelimit) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Ratelimit) GetRefillRate() int32 {
	if x != nil {
		return x.RefillRate
	}
	return 0
}

func (x *Ratelimit) GetRefillInterval() int32 {
	if x != nil {
		return x.RefillInterval
	}
	return 0
}

type CreateKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkspaceId string  `protobuf:"bytes,1,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	KeyAuthId   string  `protobuf:"bytes,2,opt,name=key_auth_id,json=keyAuthId,proto3" json:"key_auth_id,omitempty"`
	Prefix      *string `protobuf:"bytes,3,opt,name=prefix,proto3,oneof" json:"prefix,omitempty"`
	Name        *string `protobuf:"bytes,4,opt,name=name,proto3,oneof" json:"name,omitempty"`
	ByteLength  *int32  `protobuf:"varint,5,opt,name=byte_length,json=byteLength,proto3,oneof" json:"byte_length,omitempty"`
	OwnerId     *string `protobuf:"bytes,6,opt,name=owner_id,json=ownerId,proto3,oneof" json:"owner_id,omitempty"`
	Meta        *string `protobuf:"bytes,7,opt,name=meta,proto3,oneof" json:"meta,omitempty"`
	// Unix milliseconds
	Expires   *int64     `protobuf:"varint,8,opt,name=expires,proto3,oneof" json:"expires,omitempty"`
	Ratelimit *Ratelimit `protobuf:"bytes,9,opt,name=ratelimit,proto3,oneof" json:"ratelimit,omitempty"`
	// for_workspace_id marks this key as a root key.
	// workspace_id is set to our internal Unkey workspace while
	// for_workspace_id is set to the workspace id of the user.
	//
	// when verifying a root key, we return this for_workspace_id to authenticate the user.
	ForWorkspaceId *string `protobuf:"bytes,10,opt,name=for_workspace_id,json=forWorkspaceId,proto3,oneof" json:"for_workspace_id,omitempty"`
	// How often this key may be used
	// `undefined`, `0` or negative to disable
	Remaining *int32 `protobuf:"varint,11,opt,name=remaining,proto3,oneof" json:"remaining,omitempty"`
}

func (x *CreateKeyRequest) Reset() {
	*x = CreateKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_keys_v1_keys_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKeyRequest) ProtoMessage() {}

func (x *CreateKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_keys_v1_keys_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKeyRequest.ProtoReflect.Descriptor instead.
func (*CreateKeyRequest) Descriptor() ([]byte, []int) {
	return file_proto_keys_v1_keys_proto_rawDescGZIP(), []int{1}
}

func (x *CreateKeyRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *CreateKeyRequest) GetKeyAuthId() string {
	if x != nil {
		return x.KeyAuthId
	}
	return ""
}

func (x *CreateKeyRequest) GetPrefix() string {
	if x != nil && x.Prefix != nil {
		return *x.Prefix
	}
	return ""
}

func (x *CreateKeyRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CreateKeyRequest) GetByteLength() int32 {
	if x != nil && x.ByteLength != nil {
		return *x.ByteLength
	}
	return 0
}

func (x *CreateKeyRequest) GetOwnerId() string {
	if x != nil && x.OwnerId != nil {
		return *x.OwnerId
	}
	return ""
}

func (x *CreateKeyRequest) GetMeta() string {
	if x != nil && x.Meta != nil {
		return *x.Meta
	}
	return ""
}

func (x *CreateKeyRequest) GetExpires() int64 {
	if x != nil && x.Expires != nil {
		return *x.Expires
	}
	return 0
}

func (x *CreateKeyRequest) GetRatelimit() *Ratelimit {
	if x != nil {
		return x.Ratelimit
	}
	return nil
}

func (x *CreateKeyRequest) GetForWorkspaceId() string {
	if x != nil && x.ForWorkspaceId != nil {
		return *x.ForWorkspaceId
	}
	return ""
}

func (x *CreateKeyRequest) GetRemaining() int32 {
	if x != nil && x.Remaining != nil {
		return *x.Remaining
	}
	return 0
}

type CreateKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	Key   string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *CreateKeyResponse) Reset() {
	*x = CreateKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_keys_v1_keys_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKeyResponse) ProtoMessage() {}

func (x *CreateKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_keys_v1_keys_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKeyResponse.ProtoReflect.Descriptor instead.
func (*CreateKeyResponse) Descriptor() ([]byte, []int) {
	return file_proto_keys_v1_keys_proto_rawDescGZIP(), []int{2}
}

func (x *CreateKeyResponse) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *CreateKeyResponse) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type Key struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	KeyAuthId      string     `protobuf:"bytes,2,opt,name=key_auth_id,json=keyAuthId,proto3" json:"key_auth_id,omitempty"`
	WorkspaceId    string     `protobuf:"bytes,3,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	Name           *string    `protobuf:"bytes,4,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Hash           string     `protobuf:"bytes,5,opt,name=hash,proto3" json:"hash,omitempty"`
	Start          string     `protobuf:"bytes,6,opt,name=start,proto3" json:"start,omitempty"`
	OwnerId        *string    `protobuf:"bytes,7,opt,name=owner_id,json=ownerId,proto3,oneof" json:"owner_id,omitempty"`
	Meta           *string    `protobuf:"bytes,8,opt,name=meta,proto3,oneof" json:"meta,omitempty"`
	CreatedAt      int64      `protobuf:"varint,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Expires        *int64     `protobuf:"varint,10,opt,name=expires,proto3,oneof" json:"expires,omitempty"`
	Ratelimit      *Ratelimit `protobuf:"bytes,11,opt,name=ratelimit,proto3,oneof" json:"ratelimit,omitempty"`
	ForWorkspaceId *string    `protobuf:"bytes,12,opt,name=for_workspace_id,json=forWorkspaceId,proto3,oneof" json:"for_workspace_id,omitempty"`
	Remaining      *int32     `protobuf:"varint,13,opt,name=remaining,proto3,oneof" json:"remaining,omitempty"`
	DeletedAt      *int64     `protobuf:"varint,14,opt,name=deleted_at,json=deletedAt,proto3,oneof" json:"deleted_at,omitempty"`
}

func (x *Key) Reset() {
	*x = Key{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_keys_v1_keys_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Key) ProtoMessage() {}

func (x *Key) ProtoReflect() protoreflect.Message {
	mi := &file_proto_keys_v1_keys_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Key.ProtoReflect.Descriptor instead.
func (*Key) Descriptor() ([]byte, []int) {
	return file_proto_keys_v1_keys_proto_rawDescGZIP(), []int{3}
}

func (x *Key) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Key) GetKeyAuthId() string {
	if x != nil {
		return x.KeyAuthId
	}
	return ""
}

func (x *Key) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *Key) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Key) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *Key) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *Key) GetOwnerId() string {
	if x != nil && x.OwnerId != nil {
		return *x.OwnerId
	}
	return ""
}

func (x *Key) GetMeta() string {
	if x != nil && x.Meta != nil {
		return *x.Meta
	}
	return ""
}

func (x *Key) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Key) GetExpires() int64 {
	if x != nil && x.Expires != nil {
		return *x.Expires
	}
	return 0
}

func (x *Key) GetRatelimit() *Ratelimit {
	if x != nil {
		return x.Ratelimit
	}
	return nil
}

func (x *Key) GetForWorkspaceId() string {
	if x != nil && x.ForWorkspaceId != nil {
		return *x.ForWorkspaceId
	}
	return ""
}

func (x *Key) GetRemaining() int32 {
	if x != nil && x.Remaining != nil {
		return *x.Remaining
	}
	return 0
}

func (x *Key) GetDeletedAt() int64 {
	if x != nil && x.DeletedAt != nil {
		return *x.DeletedAt
	}
	return 0
}

type SoftDeleteKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId string `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
}

func (x *SoftDeleteKeyRequest) Reset() {
	*x = SoftDeleteKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_keys_v1_keys_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SoftDeleteKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoftDeleteKeyRequest) ProtoMessage() {}

func (x *SoftDeleteKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_keys_v1_keys_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoftDeleteKeyRequest.ProtoReflect.Descriptor instead.
func (*SoftDeleteKeyRequest) Descriptor() ([]byte, []int) {
	return file_proto_keys_v1_keys_proto_rawDescGZIP(), []int{4}
}

func (x *SoftDeleteKeyRequest) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

type SoftDeleteKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SoftDeleteKeyResponse) Reset() {
	*x = SoftDeleteKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_keys_v1_keys_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SoftDeleteKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoftDeleteKeyResponse) ProtoMessage() {}

func (x *SoftDeleteKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_keys_v1_keys_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoftDeleteKeyResponse.ProtoReflect.Descriptor instead.
func (*SoftDeleteKeyResponse) Descriptor() ([]byte, []int) {
	return file_proto_keys_v1_keys_proto_rawDescGZIP(), []int{5}
}

type VerifyKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        string  `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	SourceIp   string  `protobuf:"bytes,2,opt,name=source_ip,json=sourceIp,proto3" json:"source_ip,omitempty"`
	Region     string  `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	EdgeRegion *string `protobuf:"bytes,4,opt,name=edge_region,json=edgeRegion,proto3,oneof" json:"edge_region,omitempty"`
	UserAgent  *string `protobuf:"bytes,5,opt,name=user_agent,json=userAgent,proto3,oneof" json:"user_agent,omitempty"`
	Resource   *string `protobuf:"bytes,6,opt,name=resource,proto3,oneof" json:"resource,omitempty"`
}

func (x *VerifyKeyRequest) Reset() {
	*x = VerifyKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_keys_v1_keys_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyKeyRequest) ProtoMessage() {}

func (x *VerifyKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_keys_v1_keys_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyKeyRequest.ProtoReflect.Descriptor instead.
func (*VerifyKeyRequest) Descriptor() ([]byte, []int) {
	return file_proto_keys_v1_keys_proto_rawDescGZIP(), []int{6}
}

func (x *VerifyKeyRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *VerifyKeyRequest) GetSourceIp() string {
	if x != nil {
		return x.SourceIp
	}
	return ""
}

func (x *VerifyKeyRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *VerifyKeyRequest) GetEdgeRegion() string {
	if x != nil && x.EdgeRegion != nil {
		return *x.EdgeRegion
	}
	return ""
}

func (x *VerifyKeyRequest) GetUserAgent() string {
	if x != nil && x.UserAgent != nil {
		return *x.UserAgent
	}
	return ""
}

func (x *VerifyKeyRequest) GetResource() string {
	if x != nil && x.Resource != nil {
		return *x.Resource
	}
	return ""
}

type VerifyKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Valid     bool               `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	OwnerId   *string            `protobuf:"bytes,2,opt,name=owner_id,json=ownerId,proto3,oneof" json:"owner_id,omitempty"`
	Meta      *string            `protobuf:"bytes,3,opt,name=meta,proto3,oneof" json:"meta,omitempty"`
	Expires   *int64             `protobuf:"varint,4,opt,name=expires,proto3,oneof" json:"expires,omitempty"`
	Remaining *int32             `protobuf:"varint,5,opt,name=remaining,proto3,oneof" json:"remaining,omitempty"`
	Ratelimit *RatelimitResponse `protobuf:"bytes,6,opt,name=ratelimit,proto3,oneof" json:"ratelimit,omitempty"`
	// Machine readable error code if invalid
	Code string `protobuf:"bytes,7,opt,name=code,proto3" json:"code,omitempty"`
	// Human readable error message
	Error *string `protobuf:"bytes,8,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *VerifyKeyResponse) Reset() {
	*x = VerifyKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_keys_v1_keys_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyKeyResponse) ProtoMessage() {}

func (x *VerifyKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_keys_v1_keys_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyKeyResponse.ProtoReflect.Descriptor instead.
func (*VerifyKeyResponse) Descriptor() ([]byte, []int) {
	return file_proto_keys_v1_keys_proto_rawDescGZIP(), []int{7}
}

func (x *VerifyKeyResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *VerifyKeyResponse) GetOwnerId() string {
	if x != nil && x.OwnerId != nil {
		return *x.OwnerId
	}
	return ""
}

func (x *VerifyKeyResponse) GetMeta() string {
	if x != nil && x.Meta != nil {
		return *x.Meta
	}
	return ""
}

func (x *VerifyKeyResponse) GetExpires() int64 {
	if x != nil && x.Expires != nil {
		return *x.Expires
	}
	return 0
}

func (x *VerifyKeyResponse) GetRemaining() int32 {
	if x != nil && x.Remaining != nil {
		return *x.Remaining
	}
	return 0
}

func (x *VerifyKeyResponse) GetRatelimit() *RatelimitResponse {
	if x != nil {
		return x.Ratelimit
	}
	return nil
}

func (x *VerifyKeyResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *VerifyKeyResponse) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type RatelimitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit     int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Remaining int32 `protobuf:"varint,2,opt,name=remaining,proto3" json:"remaining,omitempty"`
	ResetAt   int64 `protobuf:"varint,3,opt,name=reset_at,json=resetAt,proto3" json:"reset_at,omitempty"`
}

func (x *RatelimitResponse) Reset() {
	*x = RatelimitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_keys_v1_keys_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RatelimitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RatelimitResponse) ProtoMessage() {}

func (x *RatelimitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_keys_v1_keys_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RatelimitResponse.ProtoReflect.Descriptor instead.
func (*RatelimitResponse) Descriptor() ([]byte, []int) {
	return file_proto_keys_v1_keys_proto_rawDescGZIP(), []int{8}
}

func (x *RatelimitResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *RatelimitResponse) GetRemaining() int32 {
	if x != nil {
		return x.Remaining
	}
	return 0
}

func (x *RatelimitResponse) GetResetAt() int64 {
	if x != nil {
		return x.ResetAt
	}
	return 0
}

var File_proto_keys_v1_keys_proto protoreflect.FileDescriptor

var file_proto_keys_v1_keys_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6b, 0x65, 0x79, 0x73, 0x2f, 0x76, 0x31, 0x2f,
	0x6b, 0x65, 0x79, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb8, 0x01, 0x0a, 0x09, 0x52, 0x61, 0x74, 0x65, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xba, 0x48, 0x04, 0x1a, 0x02, 0x28, 0x01, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x28, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x69, 0x6c, 0x6c, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xba, 0x48, 0x04, 0x1a,
	0x02, 0x28, 0x01, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x69, 0x6c, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x12,
	0x30, 0x0a, 0x0f, 0x72, 0x65, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xba, 0x48, 0x04, 0x1a, 0x02, 0x28,
	0x01, 0x52, 0x0e, 0x72, 0x65, 0x66, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x22, 0xaa, 0x04, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x27, 0x0a, 0x0b, 0x6b, 0x65, 0x79, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x09, 0x6b, 0x65, 0x79, 0x41, 0x75, 0x74, 0x68, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x06, 0x70,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x70,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x2d, 0x0a, 0x0b, 0x62, 0x79, 0x74, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xba, 0x48, 0x04, 0x1a, 0x02, 0x28, 0x10, 0x48,
	0x02, 0x52, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x88, 0x01, 0x01,
	0x12, 0x1e, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x03, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x17, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04,
	0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x48, 0x05, 0x52, 0x07, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x09, 0x72, 0x61, 0x74, 0x65,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x74, 0x65,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x48, 0x06, 0x52, 0x09, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x66, 0x6f, 0x72, 0x5f, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x07, 0x52, 0x0e, 0x66, 0x6f, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x48, 0x08, 0x52, 0x09, 0x72, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x62, 0x79, 0x74, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x13, 0x0a, 0x11, 0x5f,
	0x66, 0x6f, 0x72, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0x3c,
	0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xcb, 0x04, 0x0a,
	0x03, 0x4b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a,
	0x0b, 0x6b, 0x65, 0x79, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x6b, 0x65, 0x79,
	0x41, 0x75, 0x74, 0x68, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x48, 0x03,
	0x52, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x09,
	0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x48, 0x04, 0x52, 0x09, 0x72, 0x61, 0x74,
	0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x66, 0x6f, 0x72,
	0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0e, 0x66, 0x6f, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x72, 0x65, 0x6d, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x48, 0x06, 0x52, 0x09, 0x72,
	0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x07, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72,
	0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x66, 0x6f, 0x72,
	0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x22, 0x36, 0x0a, 0x14, 0x53, 0x6f,
	0x66, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x05, 0x6b, 0x65, 0x79,
	0x49, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x53, 0x6f, 0x66, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf9, 0x01, 0x0a, 0x10,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba,
	0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x12, 0x24, 0x0a, 0x0b, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x64, 0x67, 0x65, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x65, 0x64, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xe0, 0x02, 0x0a, 0x11, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52,
	0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x72,
	0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03,
	0x52, 0x09, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x12, 0x43,
	0x0a, 0x09, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x04, 0x52, 0x09, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88,
	0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x7d, 0x0a, 0x11, 0x52, 0x61,
	0x74, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xba, 0x48, 0x04, 0x1a, 0x02, 0x28, 0x01, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x25,
	0x0a, 0x09, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xba, 0x48, 0x04, 0x1a, 0x02, 0x28, 0x01, 0x52, 0x09, 0x72, 0x65, 0x6d, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x61,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xba, 0x48, 0x04, 0x22, 0x02, 0x28, 0x01,
	0x52, 0x07, 0x72, 0x65, 0x73, 0x65, 0x74, 0x41, 0x74, 0x2a, 0x67, 0x0a, 0x0d, 0x52, 0x61, 0x74,
	0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x41,
	0x54, 0x45, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x41,
	0x54, 0x45, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x41, 0x53,
	0x54, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x41, 0x54, 0x45, 0x4c, 0x49, 0x4d, 0x49, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x53, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x54,
	0x10, 0x02, 0x2a, 0x69, 0x0a, 0x15, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4b, 0x65, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x24, 0x56,
	0x45, 0x52, 0x49, 0x46, 0x59, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e,
	0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x26, 0x0a, 0x22, 0x56, 0x45, 0x52, 0x49, 0x46, 0x59, 0x5f,
	0x4b, 0x45, 0x59, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x32, 0x8f, 0x02,
	0x0a, 0x0b, 0x4b, 0x65, 0x79, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x5c, 0x0a, 0x0d, 0x53, 0x6f, 0x66, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x79,
	0x12, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x6f, 0x66, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6b, 0x65,
	0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x66, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a,
	0x09, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x75, 0x6e,
	0x6b, 0x65, 0x79, 0x65, 0x64, 0x2f, 0x75, 0x6e, 0x6b, 0x65, 0x79, 0x2f, 0x61, 0x70, 0x70, 0x73,
	0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x6b, 0x65, 0x79, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x6b, 0x65, 0x79, 0x73, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_keys_v1_keys_proto_rawDescOnce sync.Once
	file_proto_keys_v1_keys_proto_rawDescData = file_proto_keys_v1_keys_proto_rawDesc
)

func file_proto_keys_v1_keys_proto_rawDescGZIP() []byte {
	file_proto_keys_v1_keys_proto_rawDescOnce.Do(func() {
		file_proto_keys_v1_keys_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_keys_v1_keys_proto_rawDescData)
	})
	return file_proto_keys_v1_keys_proto_rawDescData
}

var file_proto_keys_v1_keys_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_keys_v1_keys_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_keys_v1_keys_proto_goTypes = []interface{}{
	(RatelimitType)(0),            // 0: proto.keys.v1.RatelimitType
	(VerifyKeyResponseCode)(0),    // 1: proto.keys.v1.VerifyKeyResponseCode
	(*Ratelimit)(nil),             // 2: proto.keys.v1.Ratelimit
	(*CreateKeyRequest)(nil),      // 3: proto.keys.v1.CreateKeyRequest
	(*CreateKeyResponse)(nil),     // 4: proto.keys.v1.CreateKeyResponse
	(*Key)(nil),                   // 5: proto.keys.v1.Key
	(*SoftDeleteKeyRequest)(nil),  // 6: proto.keys.v1.SoftDeleteKeyRequest
	(*SoftDeleteKeyResponse)(nil), // 7: proto.keys.v1.SoftDeleteKeyResponse
	(*VerifyKeyRequest)(nil),      // 8: proto.keys.v1.VerifyKeyRequest
	(*VerifyKeyResponse)(nil),     // 9: proto.keys.v1.VerifyKeyResponse
	(*RatelimitResponse)(nil),     // 10: proto.keys.v1.RatelimitResponse
}
var file_proto_keys_v1_keys_proto_depIdxs = []int32{
	0,  // 0: proto.keys.v1.Ratelimit.type:type_name -> proto.keys.v1.RatelimitType
	2,  // 1: proto.keys.v1.CreateKeyRequest.ratelimit:type_name -> proto.keys.v1.Ratelimit
	2,  // 2: proto.keys.v1.Key.ratelimit:type_name -> proto.keys.v1.Ratelimit
	10, // 3: proto.keys.v1.VerifyKeyResponse.ratelimit:type_name -> proto.keys.v1.RatelimitResponse
	3,  // 4: proto.keys.v1.KeysService.CreateKey:input_type -> proto.keys.v1.CreateKeyRequest
	6,  // 5: proto.keys.v1.KeysService.SoftDeleteKey:input_type -> proto.keys.v1.SoftDeleteKeyRequest
	8,  // 6: proto.keys.v1.KeysService.VerifyKey:input_type -> proto.keys.v1.VerifyKeyRequest
	4,  // 7: proto.keys.v1.KeysService.CreateKey:output_type -> proto.keys.v1.CreateKeyResponse
	7,  // 8: proto.keys.v1.KeysService.SoftDeleteKey:output_type -> proto.keys.v1.SoftDeleteKeyResponse
	9,  // 9: proto.keys.v1.KeysService.VerifyKey:output_type -> proto.keys.v1.VerifyKeyResponse
	7,  // [7:10] is the sub-list for method output_type
	4,  // [4:7] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_proto_keys_v1_keys_proto_init() }
func file_proto_keys_v1_keys_proto_init() {
	if File_proto_keys_v1_keys_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_keys_v1_keys_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ratelimit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_keys_v1_keys_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_keys_v1_keys_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_keys_v1_keys_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Key); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_keys_v1_keys_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SoftDeleteKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_keys_v1_keys_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SoftDeleteKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_keys_v1_keys_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_keys_v1_keys_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_keys_v1_keys_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RatelimitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_keys_v1_keys_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_proto_keys_v1_keys_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_proto_keys_v1_keys_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_proto_keys_v1_keys_proto_msgTypes[7].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_keys_v1_keys_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_keys_v1_keys_proto_goTypes,
		DependencyIndexes: file_proto_keys_v1_keys_proto_depIdxs,
		EnumInfos:         file_proto_keys_v1_keys_proto_enumTypes,
		MessageInfos:      file_proto_keys_v1_keys_proto_msgTypes,
	}.Build()
	File_proto_keys_v1_keys_proto = out.File
	file_proto_keys_v1_keys_proto_rawDesc = nil
	file_proto_keys_v1_keys_proto_goTypes = nil
	file_proto_keys_v1_keys_proto_depIdxs = nil
}
